// Code generated by mockery v2.38.0. DO NOT EDIT.

package gocbcore

import mock "github.com/stretchr/testify/mock"

// mockHttpComponentInterface is an autogenerated mock type for the httpComponentInterface type
type mockHttpComponentInterface struct {
	mock.Mock
}

// DoInternalHTTPRequest provides a mock function with given fields: req, skipConfigCheck
func (_m *mockHttpComponentInterface) DoInternalHTTPRequest(req *httpRequest, skipConfigCheck bool) (*HTTPResponse, error) {
	ret := _m.Called(req, skipConfigCheck)

	if len(ret) == 0 {
		panic("no return value specified for DoInternalHTTPRequest")
	}

	var r0 *HTTPResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(*httpRequest, bool) (*HTTPResponse, error)); ok {
		return rf(req, skipConfigCheck)
	}
	if rf, ok := ret.Get(0).(func(*httpRequest, bool) *HTTPResponse); ok {
		r0 = rf(req, skipConfigCheck)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*HTTPResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(*httpRequest, bool) error); ok {
		r1 = rf(req, skipConfigCheck)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// newMockHttpComponentInterface creates a new instance of mockHttpComponentInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockHttpComponentInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockHttpComponentInterface {
	mock := &mockHttpComponentInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
